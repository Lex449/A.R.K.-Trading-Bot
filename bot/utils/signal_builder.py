# bot/utils/signal_builder.py

"""
A.R.K. Ultra Premium Signal Builder
Fusion aus Strategie, Psychologie und Eleganz ‚Äì gebaut f√ºr maximalen Impact.
"""

def build_signal_message(symbol: str, patterns: list, combined_action: str, avg_confidence: float, indicator_score: float, trend_direction: str) -> str:
    """
    Baut das ultimative Premium-Trading-Signal f√ºr Telegram.

    Args:
        symbol (str): Handelssymbol (z.B. AAPL, SPY)
        patterns (list): Liste erkannter Pattern-Namen
        combined_action (str): Ultra Long üìà / Ultra Short üìâ / Neutral ‚ö™
        avg_confidence (float): Durchschnittliche Pattern-Confidence
        indicator_score (float): Gesamtscore aus RSI, EMA, Muster
        trend_direction (str): Trendrichtung (Long/Short/Neutral)

    Returns:
        str: Final strukturierte, elegante Premium-Nachricht
    """
    if not patterns:
        return ""

    # === Header basierend auf Qualit√§t ===
    if avg_confidence >= 85 and indicator_score >= 80:
        header = "üöÄ *Super Signal ‚Äì Maximum Alignment!*"
    elif avg_confidence >= 70:
        header = "‚ö° *Strong Signal ‚Äì High Potential Setup*"
    else:
        header = "‚ö†Ô∏è *Moderate Signal ‚Äì Additional Confirmation Advised*"

    # === Sterne dynamisch berechnen ===
    stars = "‚≠ê" * min(5, max(1, int(avg_confidence // 20)))

    # === Muster sch√∂n listen ===
    patterns_text = "\n".join([f"‚Ä¢ {p}" for p in patterns])

    # === Final strukturierter Nachrichtentext ===
    message = (
        f"{header}\n\n"
        f"*Symbol:* `{symbol}`\n"
        f"*Action:* {combined_action}\n"
        f"*Trend Direction:* {trend_direction}\n"
        f"*Signal Quality:* {stars} ({avg_confidence:.1f}%)\n"
        f"*Indicator Score:* `{indicator_score:.1f}%`\n\n"
        f"‚ú® *Detected Patterns:*\n{patterns_text}\n\n"
        f"_üß† Focus beats speed. Precision beats quantity._\n"
        f"_No spam. No stress. Pure mentorship._"
    )

    return message
