"""
A.R.K. Signal Category Engine ‚Äì Masterclass v5.6
Maps confidence scores (0‚Äì100) to ultra-clear signal categories with strategic clarity.

Made in Bali. Engineered with German Precision.
"""

from bot.utils.logger import setup_logger

logger = setup_logger(__name__)

def categorize_signal(score: float) -> str:
    """
    Converts a signal score into a Markdown-formatted category label.

    Args:
        score (float): Signal quality/confidence score (0‚Äì100)

    Returns:
        str: Markdown string with emoji label.
    """
    try:
        if score >= 95:
            category = "üèÜ *God Tier Setup* ‚Äì _Institutional Grade Entry_"
        elif score >= 90:
            category = "üöÄ *Ultra Setup* ‚Äì _Elite Momentum Detected_"
        elif score >= 80:
            category = "üìà *Top Setup* ‚Äì _High Confidence Pattern_"
        elif score >= 70:
            category = "‚úÖ *High Probability* ‚Äì _Favorable Signal Cluster_"
        elif score >= 60:
            category = "‚òëÔ∏è *Confirmed Opportunity* ‚Äì _Slight Risk Present_"
        elif score >= 50:
            category = "‚ö†Ô∏è *Caution Setup* ‚Äì _Possible Entry, Needs Context_"
        elif score >= 40:
            category = "üü° *High Risk Zone* ‚Äì _Structure Weak or Incomplete_"
        elif score >= 30:
            category = "üîª *Unfavorable* ‚Äì _Likely Noise_"
        else:
            category = "‚ùå *No Trade* ‚Äì _Insufficient Quality_"

        logger.info(f"[SignalCategoryEngine] Score {score:.1f} ‚Üí {category}")
        return category

    except Exception as e:
        logger.error(f"‚ùå [SignalCategoryEngine] Critical Error: {e}")
        return "‚ùì *Unknown Classification*"

def classify_signal_short(score: float) -> str:
    """
    Internal tech label for logic or analytics.
    """
    try:
        if score >= 95:
            return "God Tier"
        elif score >= 90:
            return "Ultra"
        elif score >= 80:
            return "Top"
        elif score >= 70:
            return "High"
        elif score >= 60:
            return "Confirmed"
        elif score >= 50:
            return "Caution"
        elif score >= 40:
            return "Risk"
        elif score >= 30:
            return "Weak"
        else:
            return "Reject"

    except Exception as e:
        logger.error(f"‚ùå [SignalCategoryEngine - Short] Error: {e}")
        return "Unknown"
